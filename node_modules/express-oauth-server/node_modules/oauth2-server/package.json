{
  "name": "oauth2-server",
  "description": "Complete, framework-agnostic, compliant and well tested module for implementing an OAuth2 Server in node.js",
  "version": "3.0.0",
  "keywords": [
    "oauth",
    "oauth2"
  ],
  "author": {
    "name": "Thom Seddon",
    "email": "thom@seddonmedia.co.uk"
  },
  "main": "index.js",
  "dependencies": {
    "basic-auth": "^1.0.0",
    "bluebird": "^2.9.13",
    "camel-case": "^1.1.1",
    "lodash": "^3.3.1",
    "standard-http-error": "^1.1.0",
    "type-is": "^1.6.0",
    "validator.js": "^1.1.1"
  },
  "devDependencies": {
    "mocha": "^2.2.1",
    "should": "^5.0.1",
    "sinon": "^1.13.0"
  },
  "license": "SEE LICENSE IN LICENSE",
  "engines": {
    "node": ">=0.8"
  },
  "scripts": {
    "test": "NODE_ENV=test ./node_modules/.bin/mocha 'test/**/*_test.js'"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/thomseddon/node-oauth2-server.git"
  },
  "gitHead": "82973a5c75cfa60bbd02049e3ba48080b8ccd240",
  "readme": "Complete, compliant and well tested module for implementing an OAuth2 server in [node.js](https://nodejs.org/).\r\n\r\n  [![NPM Version][npm-image]][npm-url]\r\n  [![Build Status][travis-image]][travis-url]\r\n  [![NPM Downloads][downloads-image]][downloads-url]\r\n\r\n# Quick Start\r\n\r\n  The _node-oauth2-server_ module is framework-agnostic but there are several wrappers available for popular frameworks such as [express](https://github.com/seegno/express-oauth-server) and [koa](https://github.com/thomseddon/koa-oauth-server).\r\n\r\n  Using the _express_ wrapper (_recommended_):\r\n\r\n```js\r\nvar express = require('express');\r\nvar oauth = require('express-oauth-server')({ model: model });\r\nvar app = express();\r\n\r\napp.use(oauth.authenticate());\r\n\r\napp.get('/', function (req, res) {\r\n  res.send('Hello World');\r\n})\r\n\r\napp.listen(3000);\r\n```\r\n\r\n  Using this module directly (_for custom servers only_):\r\n\r\n```js\r\nvar Request = require('oauth2-server').Request;\r\nvar oauth = require('oauth2-server')({ model: model });\r\n\r\nvar request = new Request({\r\n  headers: { authorization: 'Bearer foobar' }\r\n});\r\n\r\noauth.authenticate(request)\r\n  .then(function(data) {\r\n    // Request is authorized.\r\n  })\r\n  .catch(function(e) {\r\n    // Request is not authorized.\r\n  });\r\n```\r\n\r\n  _Note: see the documentation for the [specification][wiki-model-specification] of what's required from the model._\r\n\r\n# Features\r\n\r\n  - Supports `authorization_code` (with scopes), `client_credentials`, `password`, `refresh_token` and custom `extension` grant types.\r\n  - Can be used with _node-style_ callbacks, promises and ES6 _async_/_await_.\r\n  - Fully [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) compliant.\r\n  - Implicitly supports any form of storage e.g. _PostgreSQL_, _MySQL_, _Mongo_, _Redis_, _etc_.\r\n  - Full test suite.\r\n\r\n# Documentation\r\n\r\n  - [Server options][wiki-server-options]\r\n  - [Model specification][wiki-model-specification]\r\n    - [Authorization Code][wiki-model-specification]\r\n    - [Client Credentials][wiki-model-specification]\r\n    - [Password][wiki-model-specification]\r\n    - [Refresh token][wiki-model-specification]\r\n    - [Custom extension][wiki-model-specification]\r\n\r\n# Examples\r\n\r\n  Most users should refer to our [express](https://github.com/seegno/express-oauth-server/tree/master/examples) or [koa](https://github.com/thomseddon/koa-oauth-server/tree/master/examples) examples. If you're implementing a custom server, we have many examples available:\r\n\r\n  - A simple **password** grant authorization [example](examples/password).\r\n  - A more complex **password** and **refresh_token** [example](examples/refresh-token).\r\n  - An advanced **password**, **refresh_token** and **authorization_code** (with scopes) [example](examples/authorization-code).\r\n\r\n# Upgrading from 2.x\r\n\r\n  This module has been rewritten with a promise-based approach and introduced a few changes in the model specification.\r\n\r\n  Please refer to our [3.0 migration guide][wiki-migrating-from-2x-to-3x] for more information.\r\n\r\n## License\r\n\r\n  [MIT](LICENSE)\r\n\r\n<!--- badge links -->\r\n[npm-image]: https://img.shields.io/npm/v/node-oauth2-server.svg\r\n[npm-url]: https://npmjs.org/package/node-oauth2-server\r\n[travis-image]: https://img.shields.io/travis/thomseddon/node-oauth2-server/master.svg\r\n[travis-url]: https://travis-ci.org/thomseddon/node-oauth2-server\r\n[downloads-image]: https://img.shields.io/npm/dm/node-oauth2-server.svg\r\n[downloads-url]: https://npmjs.org/package/node-oauth2-server\r\n\r\n<!--- wiki links -->\r\n[wiki-model-specification]: https://github.com/thomseddon/node-oauth2-server/wiki/Model-specification\r\n[wiki-migrating-from-2x-to-3x]: https://github.com/thomseddon/node-oauth2-server/wiki/Migrating-from-2-x-to-3-x\r\n[wiki-server-options]: https://github.com/thomseddon/node-oauth2-server/wiki/Server-options\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/thomseddon/node-oauth2-server/issues"
  },
  "homepage": "https://github.com/thomseddon/node-oauth2-server#readme",
  "_id": "oauth2-server@3.0.0",
  "_shasum": "eb8eb7dc52015bf958633fba270197e676ab4f93",
  "_from": "seegno-forks/node-oauth2-server#enhancement/refactor-project",
  "_resolved": "git://github.com/seegno-forks/node-oauth2-server.git#82973a5c75cfa60bbd02049e3ba48080b8ccd240"
}
